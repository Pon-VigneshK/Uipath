<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/ocr" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd2="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:uascw="clr-namespace:UiPath.Activities.System.Compression.Workflow;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BreakTriggerScopeInArgument" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1429,1464</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.PDF</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Activities.System.Compression.Zip</x:String>
      <x:String>UiPath.Activities.System.Encode</x:String>
      <x:String>UiPath.Activities.System.Compression.Workflow</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Activities.Contracts</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Activities.Contracts</AssemblyReference>
      <AssemblyReference>GlobalVariablesT1PNoYwrqg</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap:VirtualizedContainerService.HintSize="734,1399" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="currentDataTime" />
      <Variable x:TypeArguments="x:String" Name="reportExcelFileName" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\Pon Vignesh K\Documents\UiPath\GCIT_Demo\PDFParser" Name="rootFolderPath" />
      <Variable x:TypeArguments="x:String" Default="[rootFolderPath +&quot;\ExcelReport&quot;]" Name="excelFolderPath" />
      <Variable x:TypeArguments="x:String" Default="[rootFolderPath +&quot;\SamplePDF&quot;]" Name="inputFolderPath" />
      <Variable x:TypeArguments="s:String[]" Name="Files" />
      <Variable x:TypeArguments="x:String" Name="output" />
      <Variable x:TypeArguments="x:String" Default="[rootFolderPath+&quot;\ProcessedFiles\Matched Folder&quot;]" Name="matchedFolderPath" />
      <Variable x:TypeArguments="x:String" Name="totalValue" />
      <Variable x:TypeArguments="x:String" Name="enclosedValue" />
      <Variable x:TypeArguments="sd:DataTable" Name="utilityData" />
      <Variable x:TypeArguments="x:String" Name="PDFFileName" />
      <Variable x:TypeArguments="x:String" Name="datetime" />
      <Variable x:TypeArguments="x:String" Default="[rootFolderPath+&quot;\ProcessedFiles\Unreadable Folder&quot;]" Name="unreadableFolderPath" />
      <Variable x:TypeArguments="x:String" Name="attachmentPath" />
      <Variable x:TypeArguments="x:String" Name="emailAccount" />
      <Variable x:TypeArguments="x:String" Name="emailSubject" />
      <Variable x:TypeArguments="x:String" Default="[rootFolderPath+&quot;\ProcessedFiles\Unmatched Folder&quot;]" Name="unmatchedFolderPath" />
      <Variable x:TypeArguments="x:String" Name="emailBody" />
      <Variable x:TypeArguments="x:String" Default="[rootFolderPath+&quot;\ProcessedFiles&quot;]" Name="processedFiles" />
      <Variable x:TypeArguments="x:String" Name="reportFolderPath" />
      <Variable x:TypeArguments="x:String" Name="variable3" />
      <Variable x:TypeArguments="s:String[]" Name="checkFiles" />
      <Variable x:TypeArguments="upr:ILocalResource" Name="newReportFolderPath" />
      <Variable x:TypeArguments="x:String" Default="[rootFolderPath+&quot;\ProcessedFiles\Bin&quot;]" Name="binFolderPath" />
      <Variable x:TypeArguments="si:FileInfo" Name="ZipFileInfo" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">370,192.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">400,267.5 400,297.5 340,297.5 340,147.5 220,147.5 220,159.5</av:PointCollection>
        <x:Double x:Key="Width">700</x:Double>
        <x:Double x:Key="Height">1362</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID4</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">120,159.5</av:Point>
          <av:Size x:Key="ShapeSize">200,81</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">220,240.5 220,270.5 310,270.5 310,389.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Create a new excel file for report" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_44">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign sap:VirtualizedContainerService.HintSize="646,82" sap2010:WorkflowViewState.IdRef="Assign_11">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[currentDataTime]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Now.ToString("yyyy-MM-dd_HH-mm-ss")]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="646,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;The process start time&quot;+ currentDataTime]" />
        <Assign sap:VirtualizedContainerService.HintSize="646,82" sap2010:WorkflowViewState.IdRef="Assign_12">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[reportExcelFileName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">["ProcessedFiles"+currentDataTime+".xlsx"]</InArgument>
          </Assign.Value>
        </Assign>
        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="646,1355" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <TryCatch.Try>
            <Sequence DisplayName="Create a new excel sheet with current date and time" sap:VirtualizedContainerService.HintSize="608,1127" sap2010:WorkflowViewState.IdRef="Sequence_20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Excel_Date" sap:VirtualizedContainerService.HintSize="546,392" sap2010:WorkflowViewState.IdRef="Sequence_16">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="484,281" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[excelFolderPath+&quot;/&quot;+reportExcelFileName]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,171" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataTable" Name="dt_Data" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_Data]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="388,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
                          <ui:ExcelReadRange.Range>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:ExcelReadRange.Range>
                        </ui:ExcelReadRange>
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                </ui:ExcelApplicationScope>
              </Sequence>
              <ui:WriteCell Cell="A1" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="546,116" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="Sheet1" Text="Date/Time" WorkbookPath="[excelFolderPath+&quot;/&quot;+reportExcelFileName]" />
              <ui:WriteCell Cell="B1" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="546,116" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="Sheet1" Text="InvoiceNumber" WorkbookPath="[excelFolderPath+&quot;/&quot;+reportExcelFileName]" />
              <ui:WriteCell Cell="C1" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="546,116" sap2010:WorkflowViewState.IdRef="WriteCell_3" SheetName="Sheet1" Text="Total Amount" WorkbookPath="[excelFolderPath+&quot;/&quot;+reportExcelFileName]" />
              <ui:WriteCell Cell="D1" DisplayName="Write Cell Workbook" sap:VirtualizedContainerService.HintSize="546,116" sap2010:WorkflowViewState.IdRef="WriteCell_4" SheetName="Sheet1" Text="Enclosed Amount" WorkbookPath="[excelFolderPath+&quot;/&quot;+reportExcelFileName]" />
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:ArgumentException" sap:VirtualizedContainerService.HintSize="612,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:ArgumentException">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:ArgumentException" Name="exception" />
                </ActivityAction.Argument>
                <Sequence sap:VirtualizedContainerService.HintSize="450,265" sap2010:WorkflowViewState.IdRef="Sequence_25">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CopyFile ContinueOnError="{x:Null}" Destination="[&quot;PDFParser\ExcelReport\&quot;+ reportExcelFileName]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="388,154" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="PDFParser\ExcelReport\PDFParserData.xlsx" />
                </Sequence>
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
          <TryCatch.Finally>
            <Sequence sap:VirtualizedContainerService.HintSize="450,103" sap2010:WorkflowViewState.IdRef="Sequence_26">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Sequence>
          </TryCatch.Finally>
        </TryCatch>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="646,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;The newly created Excel file is located in&quot;+excelFolderPath+reportExcelFileName]" />
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">210,389.5</av:Point>
              <av:Size x:Key="ShapeSize">200,81</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">410,430 440,430 440,569.5 230,569.5 230,599.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="ProcessedFiles" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_37">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="variable5" />
              <Variable x:TypeArguments="x:String" Name="variable6" />
              <Variable x:TypeArguments="x:String" Name="variable7" />
              <Variable x:TypeArguments="x:String" Name="variable8" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_26">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[reportFolderPath]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[rootFolderPath+"\ProcessedFiles"]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[Directory.Exists(reportFolderPath) = true]" sap:VirtualizedContainerService.HintSize="434,1142" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,180" sap2010:WorkflowViewState.IdRef="Sequence_39">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;The Process file folder path is : &quot;+ reportFolderPath]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="376,780" sap2010:WorkflowViewState.IdRef="Sequence_38">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Output="[newReportFolderPath]" Path="[rootFolderPath+&quot;/ProcessedFiles&quot;]" />
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Warn" Message="[&quot;Process folder was missing so created a new folder Folder Path &quot; +rootFolderPath+&quot;/ProcessedFiles&quot;]" />
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[reportFolderPath+&quot;\Unmatched Folder&quot;]" />
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_3" Path="[reportFolderPath+&quot;\Matched Folder&quot;]" />
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_4" Path="[reportFolderPath+&quot;\Unreadable Folder&quot;]" />
                  <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="CreateDirectory_5" Path="[reportFolderPath+&quot;\Bin&quot;]" />
                </Sequence>
              </If.Else>
            </If>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="434,85" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[unmatchedFolderPath]" />
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">130,599.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,81</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">230,680.5 230,710.5 290,710.5 290,809.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="File Segregation 1" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_45">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="inputFileName" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign DisplayName="" sap:VirtualizedContainerService.HintSize="486,82" sap2010:WorkflowViewState.IdRef="Assign_24">
                  <Assign.To>
                    <OutArgument x:TypeArguments="s:String[]">[checkFiles]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(inputFolderPath)]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="486,783" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[checkFiles]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="currentItem" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="452,597" sap2010:WorkflowViewState.IdRef="Sequence_28">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[Path.GetExtension(currentItem) = &quot;.pdf&quot;]" sap:VirtualizedContainerService.HintSize="410,509" sap2010:WorkflowViewState.IdRef="If_2">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_33">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,247" sap2010:WorkflowViewState.IdRef="Sequence_34">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[binFolderPath]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="334,159" sap2010:WorkflowViewState.IdRef="MoveFile_4" Overwrite="True" Path="[currentItem]" />
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID0">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">190,809.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,81</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">290,890.5 290,920.5 330,920.5 330,979.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Read the text from PDF and write the report in excel file and move the file to report" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_46">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Source (PDF)" sap:VirtualizedContainerService.HintSize="662,82" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">[Files]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(inputFolderPath)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Data Extractor" sap:VirtualizedContainerService.HintSize="662,4426" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Files]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="File" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="628,4240" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:String" Name="invoiceValue" />
                              <Variable x:TypeArguments="x:String" Name="purchaseOrder" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ReadPDFWithOCR DegreeOfParallelism="-1" DisplayName="Read PDF With OCR" FileName="[File]" sap:VirtualizedContainerService.HintSize="586,135" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_1" ImageDpi="150" Range="All" Text="[output]">
                              <ui:ReadPDFWithOCR.OCREngine>
                                <ActivityFunc x:TypeArguments="sd1:Image, scg:IEnumerable(scg:KeyValuePair(sd2:Rectangle, x:String))">
                                  <ActivityFunc.Argument>
                                    <DelegateInArgument x:TypeArguments="sd1:Image" Name="Image" />
                                  </ActivityFunc.Argument>
                                  <p:UiPathDocumentOCR Endpoint="{x:Null}" Output="{x:Null}" PredictionId="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ApiKey="XOctIb+MA/WcCQMdhAmplyin9t61WqXtdToTapN4grXO0+fdotfrsYwmtfW5oemtWwW2Wa/Tm/jXuiHWOswWZg==" ComputeSkewAngle="False" DisplayName="UiPath Document OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="UiPathDocumentOCR_1" Image="[Image]" Language="auto" Profile="None" Scale="1" Timeout="100000" />
                                </ActivityFunc>
                              </ui:ReadPDFWithOCR.OCREngine>
                            </ui:ReadPDFWithOCR>
                            <Assign sap:VirtualizedContainerService.HintSize="586,82" sap2010:WorkflowViewState.IdRef="Assign_31">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[purchaseOrder]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(output, "\bPURCHASE ORDER\b").Value]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[purchaseOrder &lt;&gt; &quot;PURCHASE ORDER&quot;]" sap:VirtualizedContainerService.HintSize="586,3345" sap2010:WorkflowViewState.IdRef="If_4">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,247" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[binFolderPath]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="334,159" sap2010:WorkflowViewState.IdRef="MoveFile_5" Overwrite="True" Path="[File]" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="552,2916" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_14">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[PDFFileName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Path.GetFileNameWithoutExtension(File)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_15">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[datetime]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Now.ToString("yyyy-MM-dd HH:mm:ss")]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[output.Contains(&quot;Invoice = no&quot;) = true]" sap:VirtualizedContainerService.HintSize="510,352" sap2010:WorkflowViewState.IdRef="If_1">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_22">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[invoiceValue]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(output, "Invoice\s*=\s*no\s*(\w+)").Groups(1).Value]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="476,170" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_23">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[invoiceValue]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(output, "(?&lt;=Invoice\s+)\d+(\.\d{1,2})?").Value]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;The Invoice number is &quot; +invoiceValue+ &quot; for &quot; +PDFFileName +&quot; PDF&quot;]" />
                                  <Assign sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_17">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[totalValue]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(output, "(?&lt;=TOTAL\s+)\d+(\.\d{1,2})?").Value]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;The total amount is &quot; +totalValue+ &quot; for &quot; +PDFFileName +&quot; PDF&quot;]" />
                                  <Assign sap:VirtualizedContainerService.HintSize="510,82" sap2010:WorkflowViewState.IdRef="Assign_18">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[enclosedValue]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(output, "(?&lt;=ENCLOSED\s+)[\d.+?-]+").Value]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;The enclosed amount is &quot; +enclosedValue+ &quot; for &quot; +PDFFileName +&quot; PDF&quot;]" />
                                  <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="510,1552" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                                    <ui:IfElseIf.ConditionBlocks>
                                      <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                        <ui:IfElseIfBlock BlockType="If" Condition="[enclosedValue = totalValue]">
                                          <ui:IfElseIfBlock.Then>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="450,398" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;The enclosed amount in the &quot;+PDFFileName+&quot; PDF file matches the customer's amount, so the file has been moved to the 'matched' folder.&quot;]" />
                                              <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[matchedFolderPath]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="388,159" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[inputFolderPath+&quot;\&quot;+PDFFileName+&quot;.pdf&quot;]" />
                                            </Sequence>
                                          </ui:IfElseIfBlock.Then>
                                        </ui:IfElseIfBlock>
                                        <ui:IfElseIfBlock BlockType="ElseIf" Condition="[enclosedValue.IsNumeric() = false]">
                                          <ui:IfElseIfBlock.Then>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="450,398" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;The&quot; +PDFFileName+&quot; PDF file for this amount is unreadable, so it has been moved to the 'unreadable' folder.&quot;]" />
                                              <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[unreadableFolderPath]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="388,159" sap2010:WorkflowViewState.IdRef="MoveFile_2" Overwrite="True" Path="[inputFolderPath+&quot;\&quot;+PDFFileName+&quot;.pdf&quot;]" />
                                            </Sequence>
                                          </ui:IfElseIfBlock.Then>
                                        </ui:IfElseIfBlock>
                                        <ui:IfElseIfBlock BlockType="Else">
                                          <ui:IfElseIfBlock.Then>
                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="450,398" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                              <Sequence.Variables>
                                                <Variable x:TypeArguments="x:String" Name="PDFFolderPath_____PDFFileName___pdf_" />
                                              </Sequence.Variables>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="388,88" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;The enclosed amount in the &quot;+PDFFileName+&quot; PDF file does not match the customer amount, so the file has been moved to the 'unmatched' folder.&quot;]" />
                                              <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="[unmatchedFolderPath]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="388,159" sap2010:WorkflowViewState.IdRef="MoveFile_3" Overwrite="True" Path="[&quot;PDFParser\SamplePDF\&quot;+PDFFileName+&quot;.pdf&quot;]" />
                                            </Sequence>
                                          </ui:IfElseIfBlock.Then>
                                        </ui:IfElseIfBlock>
                                      </sc:BindingList>
                                    </ui:IfElseIf.ConditionBlocks>
                                  </ui:IfElseIf>
                                </Sequence>
                              </If.Else>
                            </If>
                            <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[utilityData]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="586,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="[excelFolderPath+&quot;\&quot;+reportExcelFileName]" />
                            <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{datetime, invoiceValue, totalValue, enclosedValue}]" DataTable="[utilityData]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="586,186" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                            <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[utilityData]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="586,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" WorkbookPath="[excelFolderPath+&quot;\&quot;+reportExcelFileName]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                    <uascw:CompressFiles CompressedResource="{x:Null}" Password="{x:Null}" ResourcesToArchive="{x:Null}" SecurePassword="{x:Null}" CodePage="Default" CompressedFileInfo="[ZipFileInfo]" CompressedFileName="[binFolderPath]" CompressionLevel="Normal" DisplayName="Compress/Zip Files" EncryptionAlgorithm="Classic" sap:VirtualizedContainerService.HintSize="662,215" sap2010:WorkflowViewState.IdRef="CompressFiles_2" OverrideExistingFile="True">
                      <uascw:CompressFiles.ContentToArchive>
                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="1">
                          <InArgument x:TypeArguments="x:String">[binFolderPath]</InArgument>
                        </scg:List>
                      </uascw:CompressFiles.ContentToArchive>
                    </uascw:CompressFiles>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">230,979.5</av:Point>
                          <av:Size x:Key="ShapeSize">200,81</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">462,866 462,836 582,836 582,977 292,977 292,857</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Send an Email" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_57">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="emailExcelReport" />
                          <Variable x:TypeArguments="x:String" Name="emailPassword" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Email Account" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_33">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[emailAccount]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">ponvignesh02072001@gmail.com</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_34">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[emailSubject]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve"> Report Data Extracted from PDF</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_35">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[emailBody]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">["I hope this email finds you well. I am writing To share the report data that I extracted From a PDF file. As per your request, have compiled the information Into a New excel document, which I have attached To this email For your review.

The report contains (Handling Amount, Customer Amount, Less Discount Amount, Total Amount). I have organized the data In a clear And concise manner To make it easier For you To analyze And interpret.

Additionally, I have also attached a folder containing three subfolders that contain the PDF files that I was unable To extract data From, As well As those that were successfully matched And those that were unreadable. The folder path Is As follows:

Matched Folder Path : " + matchedFolderPath + "
Unreadable Folder Path :  " + unreadableFolderPath +
"Unmatched Folder Path:  " +unmatchedFolderPath  + "

The subfolders are organized As follows:

Matched: This folder contains PDF files that were successfully matched And From which I was able To extract the necessary data.

Unreadable: This folder contains PDF files that I was unable To extract data From due To various reasons such As the file being corrupted Or Not containing the required data.

Unmatched: This folder contains PDF files that did Not match the specified criteria And therefore, I was unable To extract the required data From them.


Thank you"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_36">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[emailExcelReport]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[excelFolderPath+"\"+reportExcelFileName]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[emailBody]" DisplayName="Send SMTP Mail Message" Email="[emailAccount]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="434,152" sap2010:WorkflowViewState.IdRef="SendMail_3" IgnoreCRL="False" IsBodyHtml="False" Password="fvrerhglcjvidfwq" Port="465" SecureConnection="Auto" Server="smtp.gmail.com" Subject="[emailSubject]" To="[emailAccount]">
                          <ui:SendMail.Files>
                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                              <InArgument x:TypeArguments="x:String">[excelFolderPath+"\"+reportExcelFileName]</InArgument>
                            </scg:List>
                          </ui:SendMail.Files>
                        </ui:SendMail>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;send an email with the report Excel file and the folders containing the Matched, Unmatched,  and Unreadable files&quot;]" />
                      </Sequence>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
  </Flowchart>
</Activity>